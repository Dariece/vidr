package de.daniel.marlinghaus.vidr.vulnerability.report.vo.trivy;

import com.fasterxml.jackson.annotation.JsonAlias;
import de.daniel.marlinghaus.vidr.vulnerability.report.vo.VulnerabilityReport;
import java.util.ArrayList;
import java.util.List;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.SuperBuilder;

@SuperBuilder
@Getter
@Setter
@ToString
@AllArgsConstructor
@NoArgsConstructor
public class TrivyReport extends VulnerabilityReport<TrivyVulnerability> {

  @JsonAlias("ArtifactName")
  private String fileName;
  @JsonAlias("ArtifactType")
  private String type;
  @Builder.Default
  @JsonAlias("Results")
  List<TrivyResult> results = new ArrayList<>();
  @Builder.Default
  List<TrivyVulnerability> vulnerabilities = new ArrayList<>();

//  @JsonProperty("Results")
//  @SuppressWarnings("unchecked")
//  private void unpackNested(List<Map<String, Object>> results) {
//    Map<String, Object> result = results.get(0);
//    type = (String) result.get("Type");
//    List<Object> vulnerabilities = (List<Object>) result.get("Vulnerabilities");
//    vulnerabilities.forEach(e ->  vulnerabilities.add(e));
//  }

  @Override
  public List<TrivyVulnerability> getVulnerabilities() {
    List<TrivyVulnerability> resultVulnerabilities = results.get(0).getVulnerabilities();
    if (!resultVulnerabilities.isEmpty() && this.vulnerabilities.isEmpty()) {
      this.vulnerabilities = resultVulnerabilities;
    }

    return this.vulnerabilities;
  }
}
