package de.daniel.marlinghaus.vidr.vulnerability.report.vo;

import com.fasterxml.jackson.annotation.JsonIgnore;
import de.daniel.marlinghaus.vidr.vulnerability.resolve.vo.GavVulnerableDependency;
import java.util.List;
import lombok.AllArgsConstructor;
import lombok.Builder.Default;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import lombok.experimental.SuperBuilder;

@SuperBuilder
@Getter
@Setter
@ToString
@AllArgsConstructor
@NoArgsConstructor
public abstract class Vulnerability {

  //deserialized fields
  private String cveId;
  private String cveTitle;
  private CvssSeverity severity;
  private String actualVersion;
  private List<String> fixedVersions;
  private String dependencyName;

  //processed fields
  /**
   * can the vulnerability be fixed or not (fixed version available? package name determinable?)
   */
  @JsonIgnore
  @Default
  private Boolean fixable = true;
  /**
   *
   */
  @JsonIgnore
  private GavVulnerableDependency gavVulnerableDependency;

  public boolean isSameDependency(Vulnerability compare){
    return dependencyName.equals(compare.getDependencyName());
  }
}
