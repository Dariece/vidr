package de.daniel.marlinghaus.vidr.vulnerability.services;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.json.JsonMapper;
import java.net.URI;
import java.util.concurrent.TimeUnit;
import org.apache.hc.client5.http.classic.methods.HttpPost;
import org.apache.hc.client5.http.config.RequestConfig;
import org.apache.hc.client5.http.impl.classic.CloseableHttpClient;
import org.apache.hc.client5.http.impl.classic.HttpClientBuilder;
import org.apache.hc.core5.http.HttpHost;

public abstract class HttpClientService implements VulnerabilityScanService {

  protected static final String CONTENT_BOUNDARY = "---Content Boundary";

  protected final ObjectMapper objectMapper;
  protected CloseableHttpClient httpClient;
  protected HttpHost httpHost;
  protected HttpPost httpPost;

  public HttpClientService() {
    objectMapper = new JsonMapper();

    // configure client
    httpClient = HttpClientBuilder.create().setDefaultRequestConfig(
            RequestConfig.custom().setResponseTimeout(1, TimeUnit.MINUTES).build())
        .build();
  }

  protected abstract String getUrlPrefix();

  /**
   * @param url
   */
  @Override
  public void initHttpClient(URI url) {
    httpPost = new HttpPost(
        url.resolve(getUrlPrefix()));
    httpHost = HttpHost.create(url);
  }

  /**
   * @throws Exception
   */
  @Override
  public void close() throws Exception {
    httpClient.close();
  }

}
