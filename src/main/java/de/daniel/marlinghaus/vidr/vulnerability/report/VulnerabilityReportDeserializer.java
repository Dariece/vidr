package de.daniel.marlinghaus.vidr.vulnerability.report;

import de.daniel.marlinghaus.vidr.vulnerability.report.vo.Vulnerability;
import de.daniel.marlinghaus.vidr.vulnerability.report.vo.VulnerabilityReport;
import de.daniel.marlinghaus.vidr.vulnerability.resolve.vo.GavVulnerableDependency;
import java.io.IOException;
import java.io.OutputStream;
import java.nio.file.Path;
import java.util.List;

public interface VulnerabilityReportDeserializer<T extends Vulnerability> extends AutoCloseable {

  /**
   * deserializes report to POJO (plain old java object)
   *
   * @param report path to the vulnerability report file
   * @return view of deserialized vulnerability report
   */
  VulnerabilityReport<T> deserialize(Path report) throws IOException;

  /**
   * deserializes report to POJO (plain old java object)
   *
   * @param report outputStream of the vulnerability report file
   * @return view of deserialized vulnerability report
   */
  VulnerabilityReport<T> deserialize(OutputStream report);

  /**
   * extracts dependency objects from report vulnerability list
   * @param vulnerabilities modified list of the report
   * @return dependency objects
   */
  List<GavVulnerableDependency> extractVulnerableDependencies(List<T> vulnerabilities);
}
