<?xml version="1.0" encoding="UTF-8"?>

<!--
Beschreibung des Tools
Das Ziel von Decca ist es, Abhängigkeitskonflikte in Softwareprojekten zu erkennen und die Schwere der Warnungen auf der Grundlage ihrer Auswirkungen auf die Software und der Kosten für ihre Behebung zu bewerten:

MODUS 1.
Stufe 1: Obwohl es mehrere Versionen eines Projekts mit widersprüchlichen Abhängigkeiten gibt, enthält der aktuelle Abhängigkeitsbaum mehrere Versionen einer Bibliothek, die den Satz von Methoden und Eigenschaften, deren Aufruf das Projekt erwartet, vollständig außer Kraft setzen.
         Die unterschiedlichen Deklarationen der kollidierenden Bibliotheken auf dem Klassenpfad führen also nicht zu Laufzeitausnahmen.

Stufe 2: Es besteht ein Abhängigkeitskonflikt, aber die Version der Bibliothek, die derzeit zum Laden verfügbar ist, überschreibt den Satz von Methoden und Eigenschaften, deren Aufruf das Projekt erwartet, vollständig.
         Andere Versionen der Bibliothek im Abhängigkeitsbaum, die nicht geladen wurden, decken jedoch die Menge der Methoden und Eigenschaften, deren Aufruf das Projekt erwartet, nicht vollständig ab.
         Obwohl der aktuelle Zustand keine Laufzeitausnahme auslöst, ist er riskant.

Stufe 3: Die geladene Version der Bibliothek deckt die Menge der Methoden und Eigenschaften, die Ihr Projekt aufzurufen erwartet, nicht vollständig ab, so dass Laufzeitausnahmen zwangsläufig auftreten werden.
         Andere Versionen der Bibliothek, die nicht in den Abhängigkeitsbaum geladen werden, können jedoch die Aufrufanforderung erfüllen und können mit geringem Aufwand durch einfaches Umordnen ihrer Deklarationen behoben werden.

Stufe 4: Die geladene Version der Bibliothek deckt die Methoden und Eigenschaften, die Ihr Projekt aufrufen möchte, nicht vollständig ab, so dass es zwangsläufig zu Laufzeitausnahmen kommen wird.
         Die widersprüchlichen Versionen müssen auf irgendeine Weise im selben Projekt koexistieren. Dies ist eine kostspielige Lösung.


MODUS 2.
Stufe 1: Mehrere Versionen der aktuellen Bibliothek in der Abhängigkeitsstruktur überschreiben die Methoden und Eigenschaften, die vom Projekt selbst aufgerufen werden sollen, vollständig, ohne eine Laufzeitausnahme zu verursachen.

Stufe 2: Die in den Baum geladene Version der Bibliothek deckt die Menge der Methoden und Eigenschaften, deren Aufruf das Projekt erwartet, nicht vollständig ab, so dass die Laufzeitausnahme definitiv auftritt.


MODUS 3.
Stufe 1: Das Projekt selbst ruft keine Methoden oder Eigenschaften direkt auf, die aufgrund eines Abhängigkeitskonflikts nicht geladen sind, und andere Bibliotheken, von denen das Projekt abhängt, rufen keine Methoden oder Eigenschaften auf, die nicht geladen sind.
         Es treten keine Laufzeitausnahmen auf.

Stufe 2: Das Projekt selbst ruft nicht direkt eine Methode oder Eigenschaft auf, die aufgrund eines Abhängigkeitskonflikts nicht geladen ist, aber andere Bibliotheken zwischen dem Projekt und der konfliktbehafteten Bibliothek rufen die Methode oder Eigenschaft auf, die nicht geladen ist.
         Ein außergewöhnliches Verhalten zur Laufzeit tritt nicht auf, aber es besteht die Gefahr, dass ein außergewöhnliches Verhalten während der Versionsentwicklung ausgelöst wird.

Stufe 3: Eine Laufzeitausnahme tritt auf, wenn das Projekt selbst direkt eine Methode oder Eigenschaft aufruft, die aufgrund eines Abhängigkeitskonflikts nicht geladen ist.
-->
<project project="io.swagger:petstore-vertx-json-rx-server" projectInfo="io.swagger:petstore-vertx-json-rx-server:1.0.0-SNAPSHOT@/appl/dev/StaticBytecodeChecker/testProject/petstore-vertx-json-rx-server/pom.xml">
  <conflicts>
    <conflictJar groupId-artifactId="com.fasterxml.jackson.core:jackson-core" versions="[2.7.4, /2.9.3, /2.8.4]" riskLevel="3">
      <versions>
        <version versionId="2.7.4" loaded="true">
          <path>com.fasterxml.jackson.core:jackson-core:2.7.4:: [io.swagger:petstore-vertx-json-rx-server:1.0.0-SNAPSHOT:: + com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.7.4::compile + com.fasterxml.jackson.core:jackson-core:2.7.4::compile] [io.swagger:petstore-vertx-json-rx-server:1.0.0-SNAPSHOT:: + com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.7.4::compile + com.fasterxml.jackson.core:jackson-databind:2.7.4::compile + com.fasterxml.jackson.core:jackson-core:2.7.4::compile]</path>
        </version>
        <version versionId="2.9.3" loaded="false">
          <path>com.fasterxml.jackson.core:jackson-core:2.9.3:: [io.swagger:petstore-vertx-json-rx-server:1.0.0-SNAPSHOT:: + com.github.phiz71:vertx-swagger-router:1.6.0::compile + io.vertx:vertx-core:3.5.1::compile + com.fasterxml.jackson.core:jackson-core:2.9.3::compile]</path>
        </version>
        <version versionId="2.8.4" loaded="false">
          <path>com.fasterxml.jackson.core:jackson-core:2.8.4:: [io.swagger:petstore-vertx-json-rx-server:1.0.0-SNAPSHOT:: + com.github.phiz71:vertx-swagger-router:1.6.0::compile + io.swagger:swagger-parser:1.0.26::compile + io.swagger:swagger-core:1.5.12::compile + com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.8.4::compile + com.fasterxml.jackson.core:jackson-core:2.8.4::compile]</path>
        </version>
      </versions>
      <RiskMethods tip="methods would be referenced but not be loaded !">
        <RiskMethod>com.fasterxml.jackson.core.JsonStreamContext: java.lang.String typeDesc()</RiskMethod>
        <RiskMethod>com.fasterxml.jackson.core.base.ParserMinimalBase: void _reportInvalidEOF(java.lang.String,com.fasterxml.jackson.core.JsonToken)</RiskMethod>
      </RiskMethods>
      <SafeJar></SafeJar>
    </conflictJar>
  </conflicts>
  <conflicts>
    <conflictJar groupId-artifactId="com.fasterxml.jackson.core:jackson-databind" versions="[2.7.4, /2.8.4, /2.9.3]" riskLevel="1">
      <versions>
        <version versionId="2.8.4" loaded="false">
          <path>com.fasterxml.jackson.core:jackson-databind:2.8.4:: [io.swagger:petstore-vertx-json-rx-server:1.0.0-SNAPSHOT:: + com.github.phiz71:vertx-swagger-router:1.6.0::compile + io.swagger:swagger-parser:1.0.26::compile + io.swagger:swagger-core:1.5.12::compile + com.fasterxml.jackson.core:jackson-databind:2.8.4::compile]</path>
        </version>
        <version versionId="2.9.3" loaded="false">
          <path>com.fasterxml.jackson.core:jackson-databind:2.9.3:: [io.swagger:petstore-vertx-json-rx-server:1.0.0-SNAPSHOT:: + com.github.phiz71:vertx-swagger-router:1.6.0::compile + io.vertx:vertx-core:3.5.1::compile + com.fasterxml.jackson.core:jackson-databind:2.9.3::compile]</path>
        </version>
        <version versionId="2.7.4" loaded="true">
          <path>com.fasterxml.jackson.core:jackson-databind:2.7.4:: [io.swagger:petstore-vertx-json-rx-server:1.0.0-SNAPSHOT:: + com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.7.4::compile + com.fasterxml.jackson.core:jackson-databind:2.7.4::compile]</path>
        </version>
      </versions>
      <RiskMethods tip="jar was be referenced and be loaded !"/>
      <SafeJar>com.fasterxml.jackson.core:jackson-databind:2.7.4:</SafeJar>
    </conflictJar>
  </conflicts>
  <conflicts>
    <conflictJar groupId-artifactId="com.fasterxml.jackson.core:jackson-annotations" versions="[2.7.0, /2.8.4]" riskLevel="1">
      <versions>
        <version versionId="2.8.4" loaded="false">
          <path>com.fasterxml.jackson.core:jackson-annotations:2.8.4:: [io.swagger:petstore-vertx-json-rx-server:1.0.0-SNAPSHOT:: + com.github.phiz71:vertx-swagger-router:1.6.0::compile + io.swagger:swagger-parser:1.0.26::compile + io.swagger:swagger-core:1.5.12::compile + io.swagger:swagger-models:1.5.12::compile + com.fasterxml.jackson.core:jackson-annotations:2.8.4::compile] [io.swagger:petstore-vertx-json-rx-server:1.0.0-SNAPSHOT:: + com.github.phiz71:vertx-swagger-router:1.6.0::compile + io.swagger:swagger-parser:1.0.26::compile + io.swagger:swagger-core:1.5.12::compile + com.fasterxml.jackson.core:jackson-annotations:2.8.4::compile]</path>
        </version>
        <version versionId="2.7.0" loaded="true">
          <path>com.fasterxml.jackson.core:jackson-annotations:2.7.0:: [io.swagger:petstore-vertx-json-rx-server:1.0.0-SNAPSHOT:: + com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.7.4::compile + com.fasterxml.jackson.core:jackson-databind:2.7.4::compile + com.fasterxml.jackson.core:jackson-annotations:2.7.0::compile]</path>
        </version>
      </versions>
      <RiskMethods tip="jar was be referenced and be loaded !"/>
      <SafeJar>com.fasterxml.jackson.core:jackson-annotations:2.7.0:</SafeJar>
    </conflictJar>
  </conflicts>
</project>
